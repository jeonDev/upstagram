buildscript {
	ext {
		queryDslVersion = "5.0.0"	// QueryDsl
	}
}

plugins {
	id 'org.springframework.boot' version '2.7.3'
	id 'io.spring.dependency-management' version '1.0.13.RELEASE'
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"		// QueryDsl
	id 'java'
}

group = 'com.api'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.2'
	/*implementation "com.h2database:h2"*/ // 로컬 세팅 시, 임시 적용

	// Jasypt
    implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.4'

	// Oauth2-client
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	// JWTS
	implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.2'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'

	// simple json
	implementation 'com.googlecode.json-simple:json-simple:1.1.1'

	// QueryDsl
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
	implementation "com.querydsl:querydsl-apt:${queryDslVersion}"

	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'mysql:mysql-connector-java'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('test') {
	useJUnitPlatform()
}


/*
 * QueryDsl 설정 추가
 */
def querydslDir = "$buildDir/generated/querydsl"		// querydsl에서 사용할 경로 설정
querydsl {		// JPA 사용 여부와 사용할 경로 설정
	jpa = true
	querydslSourcesDir = querydslDir
}

sourceSets {	// build 시 사용할 sourceSet 추가
	main.java.srcDir querydslDir
}

compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl	// querydsl 컴파일 시 사용할 옵션 설정
}

configurations {	// querydsl이 compileClassPath를 상속하도록 설정
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath
}